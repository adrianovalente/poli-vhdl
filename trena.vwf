/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 16000000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("echo")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("trigger")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("distance")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 15;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("distance[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "distance";
}

SIGNAL("distance[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "distance";
}

SIGNAL("distance[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "distance";
}

SIGNAL("distance[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "distance";
}

SIGNAL("distance[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "distance";
}

SIGNAL("distance[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "distance";
}

SIGNAL("distance[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "distance";
}

SIGNAL("distance[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "distance";
}

SIGNAL("distance[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "distance";
}

SIGNAL("distance[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "distance";
}

SIGNAL("distance[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "distance";
}

SIGNAL("distance[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "distance";
}

SIGNAL("distance[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "distance";
}

SIGNAL("distance[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "distance";
}

SIGNAL("distance[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "distance";
}

SIGNAL("hexReg:reg|d")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 15;
	LSB_INDEX = 0;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("hexReg:reg|d[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "hexReg:reg|d";
}

SIGNAL("hexReg:reg|d[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "hexReg:reg|d";
}

SIGNAL("hexReg:reg|d[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "hexReg:reg|d";
}

SIGNAL("hexReg:reg|d[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "hexReg:reg|d";
}

SIGNAL("hexReg:reg|d[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "hexReg:reg|d";
}

SIGNAL("hexReg:reg|d[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "hexReg:reg|d";
}

SIGNAL("hexReg:reg|d[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "hexReg:reg|d";
}

SIGNAL("hexReg:reg|d[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "hexReg:reg|d";
}

SIGNAL("hexReg:reg|d[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "hexReg:reg|d";
}

SIGNAL("hexReg:reg|d[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "hexReg:reg|d";
}

SIGNAL("hexReg:reg|d[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "hexReg:reg|d";
}

SIGNAL("hexReg:reg|d[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "hexReg:reg|d";
}

SIGNAL("hexReg:reg|d[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "hexReg:reg|d";
}

SIGNAL("hexReg:reg|d[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "hexReg:reg|d";
}

SIGNAL("hexReg:reg|d[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "hexReg:reg|d";
}

SIGNAL("triggerCounter:triggerCounter|count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 21;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("triggerCounter:triggerCounter|count[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "triggerCounter:triggerCounter|count";
}

SIGNAL("triggerCounter:triggerCounter|count[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "triggerCounter:triggerCounter|count";
}

SIGNAL("triggerCounter:triggerCounter|count[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "triggerCounter:triggerCounter|count";
}

SIGNAL("triggerCounter:triggerCounter|count[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "triggerCounter:triggerCounter|count";
}

SIGNAL("triggerCounter:triggerCounter|count[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "triggerCounter:triggerCounter|count";
}

SIGNAL("triggerCounter:triggerCounter|count[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "triggerCounter:triggerCounter|count";
}

SIGNAL("triggerCounter:triggerCounter|count[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "triggerCounter:triggerCounter|count";
}

SIGNAL("triggerCounter:triggerCounter|count[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "triggerCounter:triggerCounter|count";
}

SIGNAL("triggerCounter:triggerCounter|count[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "triggerCounter:triggerCounter|count";
}

SIGNAL("triggerCounter:triggerCounter|count[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "triggerCounter:triggerCounter|count";
}

SIGNAL("triggerCounter:triggerCounter|count[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "triggerCounter:triggerCounter|count";
}

SIGNAL("triggerCounter:triggerCounter|count[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "triggerCounter:triggerCounter|count";
}

SIGNAL("triggerCounter:triggerCounter|count[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "triggerCounter:triggerCounter|count";
}

SIGNAL("triggerCounter:triggerCounter|count[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "triggerCounter:triggerCounter|count";
}

SIGNAL("triggerCounter:triggerCounter|count[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "triggerCounter:triggerCounter|count";
}

SIGNAL("triggerCounter:triggerCounter|count[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "triggerCounter:triggerCounter|count";
}

SIGNAL("triggerCounter:triggerCounter|count[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "triggerCounter:triggerCounter|count";
}

SIGNAL("triggerCounter:triggerCounter|count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "triggerCounter:triggerCounter|count";
}

SIGNAL("triggerCounter:triggerCounter|count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "triggerCounter:triggerCounter|count";
}

SIGNAL("triggerCounter:triggerCounter|count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "triggerCounter:triggerCounter|count";
}

SIGNAL("triggerCounter:triggerCounter|count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "triggerCounter:triggerCounter|count";
}

SIGNAL("distance_in_meters")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("distance_in_meters[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "distance_in_meters";
}

SIGNAL("distance_in_meters[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "distance_in_meters";
}

SIGNAL("distance_in_meters[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "distance_in_meters";
}

SIGNAL("distance_in_meters[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "distance_in_meters";
}

SIGNAL("distance_in_meters[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "distance_in_meters";
}

SIGNAL("distance_in_meters[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "distance_in_meters";
}

SIGNAL("distance_in_meters[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "distance_in_meters";
}

SIGNAL("distance_in_meters[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "distance_in_meters";
}

SIGNAL("distance_in_meters[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "distance_in_meters";
}

SIGNAL("distance_in_meters[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "distance_in_meters";
}

SIGNAL("calc:calc|meters")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("calc:calc|meters[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "calc:calc|meters";
}

SIGNAL("calc:calc|meters[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "calc:calc|meters";
}

SIGNAL("calc:calc|meters[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "calc:calc|meters";
}

SIGNAL("calc:calc|meters[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "calc:calc|meters";
}

SIGNAL("calc:calc|meters[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "calc:calc|meters";
}

SIGNAL("calc:calc|meters[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "calc:calc|meters";
}

SIGNAL("calc:calc|meters[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "calc:calc|meters";
}

SIGNAL("calc:calc|meters[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "calc:calc|meters";
}

SIGNAL("calc:calc|meters[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "calc:calc|meters";
}

SIGNAL("calc:calc|meters[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "calc:calc|meters";
}

SIGNAL("alg2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("alg2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alg2";
}

SIGNAL("alg2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alg2";
}

SIGNAL("alg2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alg2";
}

SIGNAL("alg2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alg2";
}

SIGNAL("alg1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("alg1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alg1";
}

SIGNAL("alg1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alg1";
}

SIGNAL("alg1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alg1";
}

SIGNAL("alg1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alg1";
}

SIGNAL("alg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("alg0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alg0";
}

SIGNAL("alg0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alg0";
}

SIGNAL("alg0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alg0";
}

SIGNAL("alg0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alg0";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 800000;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("echo")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 327680.0;
		LEVEL 1 FOR 14745600.0;
		LEVEL 0 FOR 926720.0;
	}
}

TRANSITION_LIST("trigger")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("distance[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("distance[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("distance[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("distance[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("distance[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("distance[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("distance[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("distance[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("distance[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("distance[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("distance[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("distance[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("distance[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("distance[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("distance[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("hexReg:reg|d[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("hexReg:reg|d[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("hexReg:reg|d[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("hexReg:reg|d[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("hexReg:reg|d[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("hexReg:reg|d[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("hexReg:reg|d[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("hexReg:reg|d[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("hexReg:reg|d[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("hexReg:reg|d[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("hexReg:reg|d[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("hexReg:reg|d[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("hexReg:reg|d[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("hexReg:reg|d[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("hexReg:reg|d[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("triggerCounter:triggerCounter|count[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("triggerCounter:triggerCounter|count[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("triggerCounter:triggerCounter|count[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("triggerCounter:triggerCounter|count[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("triggerCounter:triggerCounter|count[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("triggerCounter:triggerCounter|count[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("triggerCounter:triggerCounter|count[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("triggerCounter:triggerCounter|count[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("triggerCounter:triggerCounter|count[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("triggerCounter:triggerCounter|count[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("triggerCounter:triggerCounter|count[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("triggerCounter:triggerCounter|count[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("triggerCounter:triggerCounter|count[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("triggerCounter:triggerCounter|count[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("triggerCounter:triggerCounter|count[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("triggerCounter:triggerCounter|count[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("triggerCounter:triggerCounter|count[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("triggerCounter:triggerCounter|count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("triggerCounter:triggerCounter|count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("triggerCounter:triggerCounter|count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("triggerCounter:triggerCounter|count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("distance_in_meters[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("distance_in_meters[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("distance_in_meters[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("distance_in_meters[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("distance_in_meters[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("distance_in_meters[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("distance_in_meters[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("distance_in_meters[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("distance_in_meters[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("distance_in_meters[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("calc:calc|meters[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("calc:calc|meters[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("calc:calc|meters[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("calc:calc|meters[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("calc:calc|meters[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("calc:calc|meters[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("calc:calc|meters[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("calc:calc|meters[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("calc:calc|meters[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("calc:calc|meters[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 16000000.0;
	}
}

TRANSITION_LIST("alg2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("alg2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("alg2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("alg2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("alg1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("alg1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("alg1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("alg1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("alg0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("alg0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("alg0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

TRANSITION_LIST("alg0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 16000000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "echo";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "trigger";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "distance";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18;
}

DISPLAY_LINE
{
	CHANNEL = "distance[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "distance[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "distance[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "distance[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "distance[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "distance[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "distance[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "distance[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "distance[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "distance[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "distance[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "distance[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "distance[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "distance[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "distance[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "hexReg:reg|d";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
	CHILDREN = 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34;
}

DISPLAY_LINE
{
	CHANNEL = "hexReg:reg|d[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "hexReg:reg|d[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "hexReg:reg|d[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "hexReg:reg|d[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "hexReg:reg|d[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "hexReg:reg|d[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "hexReg:reg|d[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "hexReg:reg|d[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "hexReg:reg|d[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "hexReg:reg|d[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "hexReg:reg|d[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "hexReg:reg|d[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "hexReg:reg|d[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "hexReg:reg|d[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "hexReg:reg|d[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "triggerCounter:triggerCounter|count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 35;
	TREE_LEVEL = 0;
	CHILDREN = 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56;
}

DISPLAY_LINE
{
	CHANNEL = "triggerCounter:triggerCounter|count[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "triggerCounter:triggerCounter|count[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "triggerCounter:triggerCounter|count[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "triggerCounter:triggerCounter|count[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "triggerCounter:triggerCounter|count[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "triggerCounter:triggerCounter|count[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "triggerCounter:triggerCounter|count[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "triggerCounter:triggerCounter|count[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "triggerCounter:triggerCounter|count[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "triggerCounter:triggerCounter|count[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "triggerCounter:triggerCounter|count[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "triggerCounter:triggerCounter|count[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "triggerCounter:triggerCounter|count[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "triggerCounter:triggerCounter|count[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "triggerCounter:triggerCounter|count[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "triggerCounter:triggerCounter|count[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "triggerCounter:triggerCounter|count[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "triggerCounter:triggerCounter|count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "triggerCounter:triggerCounter|count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "triggerCounter:triggerCounter|count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "triggerCounter:triggerCounter|count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "alg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 57;
	TREE_LEVEL = 0;
	CHILDREN = 58, 59, 60, 61;
}

DISPLAY_LINE
{
	CHANNEL = "alg0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "alg0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "alg0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "alg0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 57;
}

DISPLAY_LINE
{
	CHANNEL = "alg1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 62;
	TREE_LEVEL = 0;
	CHILDREN = 63, 64, 65, 66;
}

DISPLAY_LINE
{
	CHANNEL = "alg1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 62;
}

DISPLAY_LINE
{
	CHANNEL = "alg1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 62;
}

DISPLAY_LINE
{
	CHANNEL = "alg1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 62;
}

DISPLAY_LINE
{
	CHANNEL = "alg1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 62;
}

DISPLAY_LINE
{
	CHANNEL = "alg2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 67;
	TREE_LEVEL = 0;
	CHILDREN = 68, 69, 70, 71;
}

DISPLAY_LINE
{
	CHANNEL = "alg2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "alg2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "alg2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "alg2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "calc:calc|meters";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 72;
	TREE_LEVEL = 0;
	CHILDREN = 73, 74, 75, 76, 77, 78, 79, 80, 81, 82;
}

DISPLAY_LINE
{
	CHANNEL = "calc:calc|meters[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "calc:calc|meters[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "calc:calc|meters[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "calc:calc|meters[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "calc:calc|meters[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "calc:calc|meters[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "calc:calc|meters[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "calc:calc|meters[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "calc:calc|meters[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "calc:calc|meters[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "distance_in_meters";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 83;
	TREE_LEVEL = 0;
	CHILDREN = 84, 85, 86, 87, 88, 89, 90, 91, 92, 93;
}

DISPLAY_LINE
{
	CHANNEL = "distance_in_meters[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 83;
}

DISPLAY_LINE
{
	CHANNEL = "distance_in_meters[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 83;
}

DISPLAY_LINE
{
	CHANNEL = "distance_in_meters[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 83;
}

DISPLAY_LINE
{
	CHANNEL = "distance_in_meters[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 83;
}

DISPLAY_LINE
{
	CHANNEL = "distance_in_meters[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 83;
}

DISPLAY_LINE
{
	CHANNEL = "distance_in_meters[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 83;
}

DISPLAY_LINE
{
	CHANNEL = "distance_in_meters[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 83;
}

DISPLAY_LINE
{
	CHANNEL = "distance_in_meters[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 83;
}

DISPLAY_LINE
{
	CHANNEL = "distance_in_meters[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 83;
}

DISPLAY_LINE
{
	CHANNEL = "distance_in_meters[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 83;
}

TIME_BAR
{
	TIME = 150000;
	MASTER = TRUE;
}
;
